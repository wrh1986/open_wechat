<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <description>Spring MVC Configuration</description>

    <!-- 加载配置属性文件 -->
    <context:property-placeholder ignore-unresolvable="true" location="classpath*:/setting.properties" />

    <!-- 使用Annotation自动注册Bean,只扫描@Controller -->
    <context:component-scan base-package="com" use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="com.tomato.web.utils.WechatObjectParamMethodArgumentResolver"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
    <!--<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">-->
        <!--<mvc:message-converters register-defaults="true">-->
            <!--&lt;!&ndash; 将StringHttpMessageConverter的默认编码设为UTF-8 &ndash;&gt;-->
            <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter">-->
                <!--<constructor-arg value="UTF-8" />-->
            <!--</bean>-->
            <!--&lt;!&ndash; 将Jackson2HttpMessageConverter的默认格式化输出为true &ndash;&gt;-->
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">-->
                <!--<property name="prettyPrint" value="true"/>-->
                <!--<property name="objectMapper">-->
                    <!--<bean class="com.tomato.base.mapper.JsonMapper"></bean>-->
                <!--</property>-->
            <!--</bean>-->
            <!--&lt;!&ndash; 使用XML格式输出数据 &ndash;&gt;-->
            <!--<bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">-->
                <!--<constructor-arg>-->
                    <!--<bean class="org.springframework.oxm.xstream.XStreamMarshaller">-->
                        <!--<property name="streamDriver">-->
                            <!--<bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>-->
                        <!--</property>-->
                        <!--<property name="annotatedClasses">-->
                            <!--<list>-->
                                <!--<value>com.cyznj.common.persistence.BaseEntity</value>-->
                            <!--</list>-->
                        <!--</property>-->
                    <!--</bean>-->
                <!--</constructor-arg>-->
                <!--<property name="supportedMediaTypes" value="application/xml"></property>-->
            <!--</bean>-->
        <!--</mvc:message-converters>-->
        <!--&lt;!&ndash;<mvc:argument-resolvers>&ndash;&gt;-->
            <!--&lt;!&ndash;<bean class="com.cyznj.common.web.SecureModelAttributeMethodArgumentResolver">&ndash;&gt;-->
                <!--&lt;!&ndash;<constructor-arg value="false"/>&ndash;&gt;-->
            <!--&lt;!&ndash;</bean>&ndash;&gt;-->
        <!--&lt;!&ndash;</mvc:argument-resolvers>&ndash;&gt;-->
    <!--</mvc:annotation-driven>-->

    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <!--<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">-->
        <!--<property name="mediaTypes" >-->
            <!--<map>-->
                <!--<entry key="xml" value="application/xml"/>-->
                <!--<entry key="json" value="application/json"/>-->
            <!--</map>-->
        <!--</property>-->
        <!--<property name="ignoreAcceptHeader" value="true"/>-->
        <!--<property name="favorPathExtension" value="true"/>-->
    <!--</bean>-->

    <!-- 视图文件解析配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="${web.view.prefix}"/>
        <property name="suffix" value="${web.view.suffix}"/>
    </bean>

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler/>

    <!-- 定义无Controller的path<->view直接映射 -->
    <mvc:view-controller path="/" view-name="redirect:${web.view.index}"/>

    <!-- 拦截器配置 -->
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/*/wechatweb/*" />
            <bean class="com.tomato.web.interceptor.WechatInteceptor" />
        </mvc:interceptor>
    </mvc:interceptors>

</beans>